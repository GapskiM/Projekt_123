<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCYRXhpZgAATU0AKgAAAAgACAESAAMAAAABAAEAAAEaAAUAAAAB
        AAAAbgEbAAUAAAABAAAAdgEoAAMAAAABAAIAAAExAAIAAAASAAAAflEQAAEAAAABAQAAAFERAAQAAAAB
        AAAAAFESAAQAAAABAAAAAAAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYzLjUuMTEA/9sAQwAC
        AQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4L
        DAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwM/8AAEQgAMAAyAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYH
        CAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNi
        coIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz
        9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
        dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
        REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/fyi
        o72BrqzmijmltpJEKrNGFLxEjAZdwK5HUbgRxyCOK+XW8Z+LP2GvgPJoviTxR/wsD4nePNdvNP8ABGnM
        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
        YAgNG4Do3PKsAwPBAIxRViisij//2Q==
</value>
  </data>
</root>